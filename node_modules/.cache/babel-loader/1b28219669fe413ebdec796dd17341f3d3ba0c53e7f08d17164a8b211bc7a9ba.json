{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  props: {\n    entries: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    totalEntries() {\n      return Object.values(this.entries).flat().length;\n    },\n    totalWorkHours() {\n      return Object.values(this.entries).flat().reduce((total, entry) => {\n        const startTime = new Date(entry.startTime);\n        const endTime = new Date(entry.endTime);\n        const hours = (endTime - startTime) / (1000 * 60 * 60);\n        return total + hours;\n      }, 0).toFixed(2); // Két tizedesjegy\n    },\n    mostFrequentTags() {\n      const tagsCount = {};\n      Object.values(this.entries).flat().forEach(entry => {\n        entry.tags.forEach(tag => {\n          tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n        });\n      });\n      return Object.keys(tagsCount).sort((a, b) => tagsCount[b] - tagsCount[a]).slice(0, 3); // Három leggyakoribb címke\n    }\n  }\n};","map":{"version":3,"names":["props","entries","type","Object","required","computed","totalEntries","values","flat","length","totalWorkHours","reduce","total","entry","startTime","Date","endTime","hours","toFixed","mostFrequentTags","tagsCount","forEach","tags","tag","keys","sort","a","b","slice"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/MyStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white p-4 rounded shadow-md\">\n    <h2 class=\"text-xl font-semibold mb-4\">Statisztikák</h2>\n    <div>\n      <p><strong>Összes bejegyzés:</strong> {{ totalEntries }}</p>\n      <p><strong>Összes munkaidő:</strong> {{ totalWorkHours }} óra</p>\n      <p><strong>Leggyakoribb címkék:</strong> {{ mostFrequentTags.join(', ') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    entries: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    totalEntries() {\n      return Object.values(this.entries).flat().length;\n    },\n    totalWorkHours() {\n      return Object.values(this.entries).flat().reduce((total, entry) => {\n        const startTime = new Date(entry.startTime);\n        const endTime = new Date(entry.endTime);\n        const hours = (endTime - startTime) / (1000 * 60 * 60);\n        return total + hours;\n      }, 0).toFixed(2); // Két tizedesjegy\n    },\n    mostFrequentTags() {\n      const tagsCount = {};\n      Object.values(this.entries).flat().forEach(entry => {\n        entry.tags.forEach(tag => {\n          tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n        });\n      });\n      return Object.keys(tagsCount).sort((a, b) => tagsCount[b] - tagsCount[a]).slice(0, 3); // Három leggyakoribb címke\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Stílusok a MyStatistics komponenshez */\n</style>\n"],"mappings":";;;AAYA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAOH,MAAM,CAACI,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,CAACO,IAAI,CAAC,CAAC,CAACC,MAAM;IAClD,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,OAAOP,MAAM,CAACI,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,CAACO,IAAI,CAAC,CAAC,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACjE,MAAMC,SAAQ,GAAI,IAAIC,IAAI,CAACF,KAAK,CAACC,SAAS,CAAC;QAC3C,MAAME,OAAM,GAAI,IAAID,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC;QACvC,MAAMC,KAAI,GAAI,CAACD,OAAM,GAAIF,SAAS,KAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC;QACtD,OAAOF,KAAI,GAAIK,KAAK;MACtB,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;IACpB,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,SAAQ,GAAI,CAAC,CAAC;MACpBjB,MAAM,CAACI,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,CAACO,IAAI,CAAC,CAAC,CAACa,OAAO,CAACR,KAAI,IAAK;QAClDA,KAAK,CAACS,IAAI,CAACD,OAAO,CAACE,GAAE,IAAK;UACxBH,SAAS,CAACG,GAAG,IAAI,CAACH,SAAS,CAACG,GAAG,KAAK,CAAC,IAAI,CAAC;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOpB,MAAM,CAACqB,IAAI,CAACJ,SAAS,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKP,SAAS,CAACO,CAAC,IAAIP,SAAS,CAACM,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACzF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}