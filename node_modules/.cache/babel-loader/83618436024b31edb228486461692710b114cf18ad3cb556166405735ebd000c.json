{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, watch, onMounted } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  props: {\n    entries: {\n      type: Array,\n      required: true,\n      default: () => [] // Default value to ensure it's always an array\n    }\n  },\n  setup(props) {\n    const myChart = ref(null);\n    const chartInstance = ref(null);\n    const filteredEntries = ref([...props.entries]); // Initialize as a copy of the entries\n\n    const createChart = () => {\n      const ctx = myChart.value.getContext('2d');\n      if (chartInstance.value) {\n        chartInstance.value.destroy(); // Destroy the old chart before creating a new one\n      }\n      chartInstance.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Project A', 'Project B'],\n          // Sample labels\n          datasets: [{\n            label: 'Hours Worked',\n            data: [filteredEntries.value.filter(entry => entry.project === 'Project A').length, filteredEntries.value.filter(entry => entry.project === 'Project B').length],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n    const filterByProject = project => {\n      filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      createChart();\n    };\n    const resetFilter = () => {\n      filteredEntries.value = [...props.entries]; // Reset to a copy of the original entries\n      createChart();\n    };\n    watch(() => props.entries, newEntries => {\n      filteredEntries.value = [...newEntries]; // Update to a copy of the new entries\n      createChart();\n    });\n    onMounted(() => {\n      createChart();\n    });\n    return {\n      myChart,\n      filterByProject,\n      resetFilter\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","Chart","registerables","register","props","entries","type","Array","required","default","setup","myChart","chartInstance","filteredEntries","createChart","ctx","value","getContext","destroy","data","labels","datasets","label","filter","entry","project","length","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","filterByProject","resetFilter","newEntries"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/MyStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"my-statistics\">\n    <canvas ref=\"myChart\"></canvas>\n    <div class=\"buttons\">\n      <button @click=\"filterByProject('Project A')\">Project A</button>\n      <button @click=\"filterByProject('Project B')\">Project B</button>\n      <button @click=\"resetFilter\">Reset</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted } from 'vue';\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\nexport default {\n  props: {\n    entries: {\n      type: Array,\n      required: true,\n      default: () => [] // Default value to ensure it's always an array\n    }\n  },\n  setup(props) {\n    const myChart = ref(null);\n    const chartInstance = ref(null);\n    const filteredEntries = ref([...props.entries]); // Initialize as a copy of the entries\n\n    const createChart = () => {\n      const ctx = myChart.value.getContext('2d');\n      if (chartInstance.value) {\n        chartInstance.value.destroy(); // Destroy the old chart before creating a new one\n      }\n\n      chartInstance.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Project A', 'Project B'], // Sample labels\n          datasets: [{\n            label: 'Hours Worked',\n            data: [\n              filteredEntries.value.filter(entry => entry.project === 'Project A').length,\n              filteredEntries.value.filter(entry => entry.project === 'Project B').length\n            ],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n\n    const filterByProject = (project) => {\n      filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      createChart();\n    };\n\n    const resetFilter = () => {\n      filteredEntries.value = [...props.entries]; // Reset to a copy of the original entries\n      createChart();\n    };\n\n    watch(() => props.entries, (newEntries) => {\n      filteredEntries.value = [...newEntries]; // Update to a copy of the new entries\n      createChart();\n    });\n\n    onMounted(() => {\n      createChart();\n    });\n\n    return {\n      myChart,\n      filterByProject,\n      resetFilter\n    };\n  }\n};\n</script>\n\n<style scoped>\n.my-statistics {\n  max-width: 600px;\n  margin: auto;\n}\n.buttons {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";;AAYA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AAC3C,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAE/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAEhC,eAAe;EACbE,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEA,CAAA,KAAM,EAAC,CAAE;IACpB;EACF,CAAC;EACDC,KAAKA,CAACN,KAAK,EAAE;IACX,MAAMO,OAAM,GAAIb,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMc,aAAY,GAAId,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMe,eAAc,GAAIf,GAAG,CAAC,CAAC,GAAGM,KAAK,CAACC,OAAO,CAAC,CAAC,EAAE;;IAEjD,MAAMS,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMC,GAAE,GAAIJ,OAAO,CAACK,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC;MAC1C,IAAIL,aAAa,CAACI,KAAK,EAAE;QACvBJ,aAAa,CAACI,KAAK,CAACE,OAAO,CAAC,CAAC,EAAE;MACjC;MAEAN,aAAa,CAACI,KAAI,GAAI,IAAIf,KAAK,CAACc,GAAG,EAAE;QACnCT,IAAI,EAAE,KAAK;QACXa,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;UAAE;UACpCC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,cAAc;YACrBH,IAAI,EAAE,CACJN,eAAe,CAACG,KAAK,CAACO,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,OAAM,KAAM,WAAW,CAAC,CAACC,MAAM,EAC3Eb,eAAe,CAACG,KAAK,CAACO,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,OAAM,KAAM,WAAW,CAAC,CAACC,MAAK,CAC3E;YACDC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,eAAc,GAAKV,OAAO,IAAK;MACnCZ,eAAe,CAACG,KAAI,GAAIZ,KAAK,CAACC,OAAO,CAACkB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,OAAM,KAAMA,OAAO,CAAC;MAChFX,WAAW,CAAC,CAAC;IACf,CAAC;IAED,MAAMsB,WAAU,GAAIA,CAAA,KAAM;MACxBvB,eAAe,CAACG,KAAI,GAAI,CAAC,GAAGZ,KAAK,CAACC,OAAO,CAAC,EAAE;MAC5CS,WAAW,CAAC,CAAC;IACf,CAAC;IAEDf,KAAK,CAAC,MAAMK,KAAK,CAACC,OAAO,EAAGgC,UAAU,IAAK;MACzCxB,eAAe,CAACG,KAAI,GAAI,CAAC,GAAGqB,UAAU,CAAC,EAAE;MACzCvB,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEFd,SAAS,CAAC,MAAM;MACdc,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,OAAO;MACLH,OAAO;MACPwB,eAAe;MACfC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}