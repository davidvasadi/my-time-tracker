{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['notification', $options.notificationClass])\n  }, [_createElementVNode(\"button\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, \"Ã—\"), _createElementVNode(\"span\", null, _toDisplayString($props.message), 1 /* TEXT */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","notificationClass","_createElementVNode","onClick","_cache","$event","_ctx","$emit","_toDisplayString","$props","message"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/NotificationMessage.vue"],"sourcesContent":["<template>\n  <div :class=\"['notification', notificationClass]\">\n    <button class=\"close\" @click=\"$emit('close')\">&times;</button>\n    <span>{{ message }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    message: {\n      type: String,\n      required: true,\n    },\n    type: {\n      type: String,\n      default: 'success',\n    },\n  },\n  computed: {\n    notificationClass() {\n      return this.type === 'success' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800';\n    },\n  },\n};\n</script>\n\n<style scoped>\n.notification {\n  padding: 1rem;\n  border-radius: 0.5rem;\n  position: relative;\n  margin-bottom: 1rem;\n}\n\n.close {\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAGM;IAHAC,KAAK,EADbC,eAAA,kBACgCC,QAAA,CAAAC,iBAAiB;MAC7CC,mBAAA,CAA8D;IAAtDJ,KAAK,EAAC,OAAO;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAW,GAAO,GACrDL,mBAAA,CAA0B,cAAAM,gBAAA,CAAjBC,MAAA,CAAAC,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}