{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { Chart } from 'chart.js';\nexport default {\n  name: 'MyStatistics',\n  props: {\n    entries: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const chartRef = ref(null);\n    const myChart = ref(null);\n    const filteredEntries = ref(Array.isArray(props.entries) ? props.entries : Object.values(props.entries));\n    const createChart = () => {\n      const ctx = chartRef.value?.getContext('2d');\n      if (!ctx) {\n        console.error(\"Canvas context is not available.\");\n        return;\n      }\n      if (myChart.value) {\n        myChart.value.destroy();\n      }\n      myChart.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredEntries.value.map(entry => entry.client || entry.project),\n          // Labels based on clients or projects\n          datasets: [{\n            label: 'Total Entries',\n            data: filteredEntries.value.map(entry => entry.hours || 0),\n            // Assuming hours is a property in your entries\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n    const filterByClient = client => {\n      if (Array.isArray(props.entries)) {\n        filteredEntries.value = props.entries.filter(entry => entry.client === client);\n      }\n      createChart();\n    };\n    const filterByProject = project => {\n      if (Array.isArray(props.entries)) {\n        filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      }\n      createChart();\n    };\n    const resetFilter = () => {\n      filteredEntries.value = Array.isArray(props.entries) ? props.entries : Object.values(props.entries);\n      createChart();\n    };\n    onMounted(() => {\n      createChart();\n    });\n    watch(() => props.entries, newEntries => {\n      filteredEntries.value = Array.isArray(newEntries) ? newEntries : Object.values(newEntries);\n      createChart();\n    });\n    return {\n      chartRef,\n      filterByClient,\n      filterByProject,\n      resetFilter\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","name","props","entries","type","Array","required","default","setup","chartRef","myChart","filteredEntries","isArray","Object","values","createChart","ctx","value","getContext","console","error","destroy","data","labels","map","entry","client","project","datasets","label","hours","backgroundColor","options","responsive","scales","y","beginAtZero","filterByClient","filter","filterByProject","resetFilter","newEntries"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/MyStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"my-4\">\n    <div class=\"flex space-x-2 mb-4\">\n      <button @click=\"filterByClient('Varga Viktória')\" class=\"px-4 py-2 bg-blue-500 text-white rounded\">Varga Viktória</button>\n      <button @click=\"filterByProject('Project A')\" class=\"px-4 py-2 bg-green-500 text-white rounded\">Project A</button>\n      <button @click=\"resetFilter\" class=\"px-4 py-2 bg-gray-500 text-white rounded\">Reset</button>\n    </div>\n    <canvas ref=\"chartRef\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue';\nimport { Chart } from 'chart.js';\n\nexport default {\n  name: 'MyStatistics',\n  props: {\n    entries: {\n      type: Array,\n      required: true,\n      default: () => [],\n    },\n  },\n  setup(props) {\n    const chartRef = ref(null);\n    const myChart = ref(null);\n    const filteredEntries = ref(Array.isArray(props.entries) ? props.entries : Object.values(props.entries));\n\n    const createChart = () => {\n      const ctx = chartRef.value?.getContext('2d');\n      if (!ctx) {\n        console.error(\"Canvas context is not available.\");\n        return;\n      }\n\n      if (myChart.value) {\n        myChart.value.destroy();\n      }\n\n      myChart.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredEntries.value.map(entry => entry.client || entry.project), // Labels based on clients or projects\n          datasets: [\n            {\n              label: 'Total Entries',\n              data: filteredEntries.value.map(entry => entry.hours || 0), // Assuming hours is a property in your entries\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    const filterByClient = (client) => {\n      if (Array.isArray(props.entries)) {\n        filteredEntries.value = props.entries.filter(entry => entry.client === client);\n      }\n      createChart();\n    };\n\n    const filterByProject = (project) => {\n      if (Array.isArray(props.entries)) {\n        filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      }\n      createChart();\n    };\n\n    const resetFilter = () => {\n      filteredEntries.value = Array.isArray(props.entries) ? props.entries : Object.values(props.entries);\n      createChart();\n    };\n\n    onMounted(() => {\n      createChart();\n    });\n\n    watch(() => props.entries, (newEntries) => {\n      filteredEntries.value = Array.isArray(newEntries) ? newEntries : Object.values(newEntries);\n      createChart();\n    });\n\n    return {\n      chartRef,\n      filterByClient,\n      filterByProject,\n      resetFilter,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Itt adhatsz hozzá további stílusokat, ha szükséges */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}