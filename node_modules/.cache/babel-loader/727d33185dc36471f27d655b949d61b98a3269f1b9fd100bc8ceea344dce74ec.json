{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport TimeEntryForm from './components/TimeEntryForm.vue';\nexport default {\n  components: {\n    TimeEntryForm\n  },\n  data() {\n    return {\n      entries: JSON.parse(localStorage.getItem('entries')) || {},\n      viewType: 'daily' // Alapértelmezett nézet\n    };\n  },\n  computed: {\n    filteredEntries() {\n      const filtered = {};\n      for (const userName in this.entries) {\n        const userEntries = this.entries[userName];\n        const today = new Date();\n        const todayString = today.toISOString().split('T')[0];\n        const startOfWeek = new Date(today);\n        startOfWeek.setDate(today.getDate() - today.getDay()); // Vasárnap\n        const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n        const entriesToShow = userEntries.filter(entry => {\n          const entryDate = new Date(entry.date);\n          if (this.viewType === 'daily') {\n            return entry.date === todayString; // Napi nézet\n          } else if (this.viewType === 'weekly') {\n            // Heti nézet\n            return entryDate >= startOfWeek && entryDate < new Date(startOfWeek.getFullYear(), startOfWeek.getMonth(), startOfWeek.getDate() + 7);\n          } else if (this.viewType === 'monthly') {\n            // Havi nézet\n            return entryDate >= startOfMonth && entryDate < new Date(startOfMonth.getFullYear(), startOfMonth.getMonth() + 1, 1);\n          }\n        });\n        if (entriesToShow.length) {\n          filtered[userName] = entriesToShow; // Csak azokat a felhasználókat tároljuk, akiknek van bejegyzésük\n        }\n      }\n      return filtered;\n    }\n  },\n  methods: {\n    handleFormSubmit(newEntry) {\n      const {\n        userName\n      } = newEntry;\n      if (!this.entries[userName]) {\n        this.entries[userName] = [];\n      }\n\n      // Ellenőrizzük, hogy van-e már bejegyzés a megadott dátummal\n      const existingEntryIndex = this.entries[userName].findIndex(entry => entry.date === newEntry.date && entry.startTime === newEntry.startTime);\n      if (existingEntryIndex !== -1) {\n        // Ha létezik bejegyzés, frissítjük\n        this.entries[userName][existingEntryIndex] = newEntry;\n      } else {\n        // Új bejegyzés hozzáadása\n        this.entries[userName].push(newEntry);\n      }\n      this.saveEntries();\n      this.resetForm(); // Forma visszaállítása\n    },\n    editEntry(entry, userName) {\n      // Frissítjük a formot a kiválasztott bejegyzéssel\n      this.$refs.entryForm.setFormData(entry);\n      // Csak a kiválasztott bejegyzést távolítjuk el\n      const index = this.entries[userName].indexOf(entry);\n      if (index !== -1) {\n        this.entries[userName].splice(index, 1); // Töröljük a kiválasztott bejegyzést a listából\n      }\n      this.saveEntries(); // Frissítjük a helyi tárolót\n    },\n    deleteEntry(userName, index) {\n      this.entries[userName].splice(index, 1);\n      if (this.entries[userName].length === 0) {\n        delete this.entries[userName]; // Ha nincs több bejegyzés, töröljük a felhasználót\n      }\n      this.saveEntries();\n    },\n    resetForm() {\n      // Visszaállítjuk a form értékeit üresre\n      this.$refs.entryForm.resetForm();\n    },\n    saveEntries() {\n      localStorage.setItem('entries', JSON.stringify(this.entries));\n    }\n  }\n};","map":{"version":3,"names":["TimeEntryForm","components","data","entries","JSON","parse","localStorage","getItem","viewType","computed","filteredEntries","filtered","userName","userEntries","today","Date","todayString","toISOString","split","startOfWeek","setDate","getDate","getDay","startOfMonth","getFullYear","getMonth","entriesToShow","filter","entry","entryDate","date","length","methods","handleFormSubmit","newEntry","existingEntryIndex","findIndex","startTime","push","saveEntries","resetForm","editEntry","$refs","entryForm","setFormData","index","indexOf","splice","deleteEntry","setItem","stringify"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto p-6\">\n    <h1 class=\"text-2xl font-bold mb-6\">Időnyilvántartó rendszer</h1>\n    <TimeEntryForm @submit=\"handleFormSubmit\" ref=\"entryForm\" />\n    \n    <!-- Nézet kiválasztása -->\n    <div class=\"mt-6 mb-4\">\n      <label for=\"viewType\" class=\"mr-2\">Nézet:</label>\n      <select v-model=\"viewType\" id=\"viewType\" class=\"p-2 border border-gray-300 rounded\">\n        <option value=\"daily\">Napi</option>\n        <option value=\"weekly\">Heti</option>\n        <option value=\"monthly\">Havi</option>\n      </select>\n    </div>\n\n    <div class=\"mt-6\">\n      <h2 class=\"text-xl font-semibold\">Bejegyzések</h2>\n      <div v-if=\"Object.keys(filteredEntries).length === 0\" class=\"mt-4\">\n        <p>Nincsenek bejegyzések.</p>\n      </div>\n      <div v-for=\"(userEntries, userName) in filteredEntries\" :key=\"userName\" class=\"mb-4\">\n        <div v-for=\"(entry, index) in userEntries\" :key=\"index\" class=\"border p-4 mt-2 rounded\">\n          <p><strong>Munkavállaló neve:</strong> {{ entry.userName }}</p>\n          <p><strong>Dátum:</strong> {{ entry.date }}</p>\n          <p><strong>Kezdési idő:</strong> {{ entry.startTime }}</p>\n          <p><strong>Befejezési idő:</strong> {{ entry.endTime }}</p>\n          <p><strong>Feladat leírása:</strong> {{ entry.taskDescription }}</p>\n          <p><strong>Címkék:</strong> <span v-if=\"entry.tags.length\">{{ entry.tags.join(', ') }}</span><span v-else>Nincsenek címkék.</span></p>\n          <button @click=\"editEntry(entry, userName)\" class=\"mt-2 bg-yellow-500 text-white p-2 rounded\">Módosítás</button>\n          <button @click=\"deleteEntry(userName, index)\" class=\"mt-2 bg-red-500 text-white p-2 rounded\">Törlés</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TimeEntryForm from './components/TimeEntryForm.vue';\n\nexport default {\n  components: {\n    TimeEntryForm,\n  },\n  data() {\n    return {\n      entries: JSON.parse(localStorage.getItem('entries')) || {},\n      viewType: 'daily', // Alapértelmezett nézet\n    };\n  },\ncomputed: {\n  filteredEntries() {\n    const filtered = {};\n    for (const userName in this.entries) {\n      const userEntries = this.entries[userName];\n\n      const today = new Date();\n      const todayString = today.toISOString().split('T')[0];\n      const startOfWeek = new Date(today);\n      startOfWeek.setDate(today.getDate() - today.getDay()); // Vasárnap\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n\n      const entriesToShow = userEntries.filter(entry => {\n        const entryDate = new Date(entry.date);\n        if (this.viewType === 'daily') {\n          return entry.date === todayString; // Napi nézet\n        } else if (this.viewType === 'weekly') {\n          // Heti nézet\n          return entryDate >= startOfWeek && entryDate < new Date(startOfWeek.getFullYear(), startOfWeek.getMonth(), startOfWeek.getDate() + 7);\n        } else if (this.viewType === 'monthly') {\n          // Havi nézet\n          return entryDate >= startOfMonth && entryDate < new Date(startOfMonth.getFullYear(), startOfMonth.getMonth() + 1, 1);\n        }\n      });\n\n      if (entriesToShow.length) {\n        filtered[userName] = entriesToShow; // Csak azokat a felhasználókat tároljuk, akiknek van bejegyzésük\n      }\n    }\n    return filtered;\n  },\n},\n\n  methods: {\n    handleFormSubmit(newEntry) {\n      const { userName } = newEntry;\n\n      if (!this.entries[userName]) {\n        this.entries[userName] = [];\n      }\n\n      // Ellenőrizzük, hogy van-e már bejegyzés a megadott dátummal\n      const existingEntryIndex = this.entries[userName].findIndex(\n        entry => entry.date === newEntry.date && entry.startTime === newEntry.startTime\n      );\n\n      if (existingEntryIndex !== -1) {\n        // Ha létezik bejegyzés, frissítjük\n        this.entries[userName][existingEntryIndex] = newEntry; \n      } else {\n        // Új bejegyzés hozzáadása\n        this.entries[userName].push(newEntry); \n      }\n\n      this.saveEntries();\n      this.resetForm(); // Forma visszaállítása\n    },\n    editEntry(entry, userName) {\n      // Frissítjük a formot a kiválasztott bejegyzéssel\n      this.$refs.entryForm.setFormData(entry);\n      // Csak a kiválasztott bejegyzést távolítjuk el\n      const index = this.entries[userName].indexOf(entry);\n      if (index !== -1) {\n        this.entries[userName].splice(index, 1); // Töröljük a kiválasztott bejegyzést a listából\n      }\n      this.saveEntries(); // Frissítjük a helyi tárolót\n    },\n    deleteEntry(userName, index) {\n      this.entries[userName].splice(index, 1);\n      if (this.entries[userName].length === 0) {\n        delete this.entries[userName]; // Ha nincs több bejegyzés, töröljük a felhasználót\n      }\n      this.saveEntries();\n    },\n    resetForm() {\n      // Visszaállítjuk a form értékeit üresre\n      this.$refs.entryForm.resetForm();\n    },\n    saveEntries() {\n      localStorage.setItem('entries', JSON.stringify(this.entries));\n    },\n  },\n};\n</script>\n\n<style>\n/* Custom styles for your application */\n</style>\n"],"mappings":";;;AAqCA,OAAOA,aAAY,MAAO,gCAAgC;AAE1D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;MAC1DC,QAAQ,EAAE,OAAO,CAAE;IACrB,CAAC;EACH,CAAC;EACHC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB,MAAMC,QAAO,GAAI,CAAC,CAAC;MACnB,KAAK,MAAMC,QAAO,IAAK,IAAI,CAACT,OAAO,EAAE;QACnC,MAAMU,WAAU,GAAI,IAAI,CAACV,OAAO,CAACS,QAAQ,CAAC;QAE1C,MAAME,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;QACxB,MAAMC,WAAU,GAAIF,KAAK,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrD,MAAMC,WAAU,GAAI,IAAIJ,IAAI,CAACD,KAAK,CAAC;QACnCK,WAAW,CAACC,OAAO,CAACN,KAAK,CAACO,OAAO,CAAC,IAAIP,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAE;QACvD,MAAMC,YAAW,GAAI,IAAIR,IAAI,CAACD,KAAK,CAACU,WAAW,CAAC,CAAC,EAAEV,KAAK,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAEvE,MAAMC,aAAY,GAAIb,WAAW,CAACc,MAAM,CAACC,KAAI,IAAK;UAChD,MAAMC,SAAQ,GAAI,IAAId,IAAI,CAACa,KAAK,CAACE,IAAI,CAAC;UACtC,IAAI,IAAI,CAACtB,QAAO,KAAM,OAAO,EAAE;YAC7B,OAAOoB,KAAK,CAACE,IAAG,KAAMd,WAAW,EAAE;UACrC,OAAO,IAAI,IAAI,CAACR,QAAO,KAAM,QAAQ,EAAE;YACrC;YACA,OAAOqB,SAAQ,IAAKV,WAAU,IAAKU,SAAQ,GAAI,IAAId,IAAI,CAACI,WAAW,CAACK,WAAW,CAAC,CAAC,EAAEL,WAAW,CAACM,QAAQ,CAAC,CAAC,EAAEN,WAAW,CAACE,OAAO,CAAC,IAAI,CAAC,CAAC;UACvI,OAAO,IAAI,IAAI,CAACb,QAAO,KAAM,SAAS,EAAE;YACtC;YACA,OAAOqB,SAAQ,IAAKN,YAAW,IAAKM,SAAQ,GAAI,IAAId,IAAI,CAACQ,YAAY,CAACC,WAAW,CAAC,CAAC,EAAED,YAAY,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UACtH;QACF,CAAC,CAAC;QAEF,IAAIC,aAAa,CAACK,MAAM,EAAE;UACxBpB,QAAQ,CAACC,QAAQ,IAAIc,aAAa,EAAE;QACtC;MACF;MACA,OAAOf,QAAQ;IACjB;EACF,CAAC;EAECqB,OAAO,EAAE;IACPC,gBAAgBA,CAACC,QAAQ,EAAE;MACzB,MAAM;QAAEtB;MAAS,IAAIsB,QAAQ;MAE7B,IAAI,CAAC,IAAI,CAAC/B,OAAO,CAACS,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACT,OAAO,CAACS,QAAQ,IAAI,EAAE;MAC7B;;MAEA;MACA,MAAMuB,kBAAiB,GAAI,IAAI,CAAChC,OAAO,CAACS,QAAQ,CAAC,CAACwB,SAAS,CACzDR,KAAI,IAAKA,KAAK,CAACE,IAAG,KAAMI,QAAQ,CAACJ,IAAG,IAAKF,KAAK,CAACS,SAAQ,KAAMH,QAAQ,CAACG,SACxE,CAAC;MAED,IAAIF,kBAAiB,KAAM,CAAC,CAAC,EAAE;QAC7B;QACA,IAAI,CAAChC,OAAO,CAACS,QAAQ,CAAC,CAACuB,kBAAkB,IAAID,QAAQ;MACvD,OAAO;QACL;QACA,IAAI,CAAC/B,OAAO,CAACS,QAAQ,CAAC,CAAC0B,IAAI,CAACJ,QAAQ,CAAC;MACvC;MAEA,IAAI,CAACK,WAAW,CAAC,CAAC;MAClB,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;IACpB,CAAC;IACDC,SAASA,CAACb,KAAK,EAAEhB,QAAQ,EAAE;MACzB;MACA,IAAI,CAAC8B,KAAK,CAACC,SAAS,CAACC,WAAW,CAAChB,KAAK,CAAC;MACvC;MACA,MAAMiB,KAAI,GAAI,IAAI,CAAC1C,OAAO,CAACS,QAAQ,CAAC,CAACkC,OAAO,CAAClB,KAAK,CAAC;MACnD,IAAIiB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC1C,OAAO,CAACS,QAAQ,CAAC,CAACmC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,EAAE;MAC3C;MACA,IAAI,CAACN,WAAW,CAAC,CAAC,EAAE;IACtB,CAAC;IACDS,WAAWA,CAACpC,QAAQ,EAAEiC,KAAK,EAAE;MAC3B,IAAI,CAAC1C,OAAO,CAACS,QAAQ,CAAC,CAACmC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACvC,IAAI,IAAI,CAAC1C,OAAO,CAACS,QAAQ,CAAC,CAACmB,MAAK,KAAM,CAAC,EAAE;QACvC,OAAO,IAAI,CAAC5B,OAAO,CAACS,QAAQ,CAAC,EAAE;MACjC;MACA,IAAI,CAAC2B,WAAW,CAAC,CAAC;IACpB,CAAC;IACDC,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACE,KAAK,CAACC,SAAS,CAACH,SAAS,CAAC,CAAC;IAClC,CAAC;IACDD,WAAWA,CAAA,EAAG;MACZjC,YAAY,CAAC2C,OAAO,CAAC,SAAS,EAAE7C,IAAI,CAAC8C,SAAS,CAAC,IAAI,CAAC/C,OAAO,CAAC,CAAC;IAC/D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}