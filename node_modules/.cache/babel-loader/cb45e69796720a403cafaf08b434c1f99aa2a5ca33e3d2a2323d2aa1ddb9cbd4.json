{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mt-6\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-semibold\"\n  }, \"Statisztikák\", -1 /* HOISTED */)), $setup.totalEntries > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Összes bejegyzés: \" + _toDisplayString($setup.totalEntries), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"canvas\", {\n    id: \"entriesChart\"\n  }, null, -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"Nincsenek bejegyzések a statisztikákhoz.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$setup","totalEntries","_hoisted_2","_toDisplayString","id","_hoisted_3","_cache"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/MyStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"mt-6\">\n    <h2 class=\"text-xl font-semibold\">Statisztikák</h2>\n    <div v-if=\"totalEntries > 0\">\n      <p>Összes bejegyzés: {{ totalEntries }}</p>\n      <canvas id=\"entriesChart\"></canvas>\n    </div>\n    <div v-else>\n      <p>Nincsenek bejegyzések a statisztikákhoz.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from 'vue';\nimport Chart from 'chart.js/auto';\n\nexport default {\n  props: {\n    entries: {\n      type: Object,\n      required: true,\n    },\n  },\n  setup(props) {\n    const totalEntries = ref(0);\n    \n    const createChart = () => {\n      const ctx = document.getElementById('entriesChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: Object.keys(props.entries), // Felhasználónevek\n          datasets: [{\n            label: 'Bejegyzések száma',\n            data: Object.values(props.entries).map(userEntries => userEntries.length), // Bejegyzések száma felhasználónként\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          }],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    watch(() => props.entries, (newEntries) => {\n      totalEntries.value = Object.values(newEntries).flat().length; // Frissítjük az összes bejegyzést\n      createChart(); // Frissítjük a diagramot\n    }, { immediate: true });\n\n    return {\n      totalEntries,\n    };\n  },\n};\n</script>\n\n<style scoped>\ncanvas {\n  max-width: 600px;\n  margin: auto;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAmD;IAA/CJ,KAAK,EAAC;EAAuB,GAAC,cAAY,sBACnCK,MAAA,CAAAC,YAAY,Q,cAAvBJ,mBAAA,CAGM,OANVK,UAAA,GAIMH,mBAAA,CAA2C,WAAxC,oBAAkB,GAAAI,gBAAA,CAAGH,MAAA,CAAAC,YAAY,kB,0BACpCF,mBAAA,CAAmC;IAA3BK,EAAE,EAAC;EAAc,4B,oBAE3BP,mBAAA,CAEM,OATVQ,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAQMP,mBAAA,CAA+C,WAA5C,0CAAwC,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}