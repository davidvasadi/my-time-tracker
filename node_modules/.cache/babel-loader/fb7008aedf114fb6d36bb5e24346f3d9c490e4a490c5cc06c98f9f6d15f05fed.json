{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { Chart } from 'chart.js';\nexport default {\n  name: 'MyStatistics',\n  props: {\n    entries: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const chartRef = ref(null);\n    const myChart = ref(null);\n    const filteredEntries = ref(props.entries); // kezdő állapot a props alapján\n\n    // Funkció a diagram létrehozására\n    const createChart = () => {\n      const ctx = chartRef.value?.getContext('2d'); // Canvas kontextus elérése\n      if (!ctx) {\n        console.error(\"Canvas context is not available.\");\n        return; // Ha a ctx null, ne folytasd\n      }\n\n      // Ha a diagram már létezik, töröld\n      if (myChart.value) {\n        myChart.value.destroy();\n      }\n      myChart.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: Object.keys(filteredEntries.value),\n          datasets: [{\n            label: 'Total Entries',\n            data: Object.values(filteredEntries.value).map(arr => arr.length),\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n\n    // Filter funkciók\n    const filterByClient = client => {\n      filteredEntries.value = props.entries.filter(entry => entry.client === client);\n      createChart(); // Hívás a diagram frissítésére\n    };\n    const filterByProject = project => {\n      filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      createChart(); // Hívás a diagram frissítésére\n    };\n    const resetFilter = () => {\n      filteredEntries.value = props.entries; // Visszaállítás az alapértelmezett adatokra\n      createChart(); // Hívás a diagram frissítésére\n    };\n\n    // Montáláskor diagram létrehozása\n    onMounted(() => {\n      createChart();\n    });\n\n    // Watcher, hogy új bejegyzéseknél frissítse a diagramot\n    watch(() => props.entries, newEntries => {\n      filteredEntries.value = newEntries; // Frissítjük a szűrt bejegyzéseket\n      createChart(); // Új diagram létrehozása\n    });\n    return {\n      chartRef,\n      filterByClient,\n      filterByProject,\n      resetFilter\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","name","props","entries","type","Array","required","setup","chartRef","myChart","filteredEntries","createChart","ctx","value","getContext","console","error","destroy","data","labels","Object","keys","datasets","label","values","map","arr","length","backgroundColor","options","responsive","scales","y","beginAtZero","filterByClient","client","filter","entry","filterByProject","project","resetFilter","newEntries"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/components/MyStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"my-4\">\n    <div class=\"flex space-x-2 mb-4\">\n      <button @click=\"filterByClient('Varga Viktória')\" class=\"px-4 py-2 bg-blue-500 text-white rounded\">Varga Viktória</button>\n      <button @click=\"filterByProject('Project A')\" class=\"px-4 py-2 bg-green-500 text-white rounded\">Project A</button>\n      <button @click=\"resetFilter\" class=\"px-4 py-2 bg-gray-500 text-white rounded\">Reset</button>\n    </div>\n    <canvas ref=\"chartRef\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue';\nimport { Chart } from 'chart.js';\n\nexport default {\n  name: 'MyStatistics',\n  props: {\n    entries: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup(props) {\n    const chartRef = ref(null);\n    const myChart = ref(null);\n    const filteredEntries = ref(props.entries); // kezdő állapot a props alapján\n\n    // Funkció a diagram létrehozására\n    const createChart = () => {\n      const ctx = chartRef.value?.getContext('2d'); // Canvas kontextus elérése\n      if (!ctx) {\n        console.error(\"Canvas context is not available.\");\n        return; // Ha a ctx null, ne folytasd\n      }\n\n      // Ha a diagram már létezik, töröld\n      if (myChart.value) {\n        myChart.value.destroy();\n      }\n\n      myChart.value = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: Object.keys(filteredEntries.value),\n          datasets: [\n            {\n              label: 'Total Entries',\n              data: Object.values(filteredEntries.value).map(arr => arr.length),\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    };\n\n    // Filter funkciók\n    const filterByClient = (client) => {\n      filteredEntries.value = props.entries.filter(entry => entry.client === client);\n      createChart(); // Hívás a diagram frissítésére\n    };\n\n    const filterByProject = (project) => {\n      filteredEntries.value = props.entries.filter(entry => entry.project === project);\n      createChart(); // Hívás a diagram frissítésére\n    };\n\n    const resetFilter = () => {\n      filteredEntries.value = props.entries; // Visszaállítás az alapértelmezett adatokra\n      createChart(); // Hívás a diagram frissítésére\n    };\n\n    // Montáláskor diagram létrehozása\n    onMounted(() => {\n      createChart();\n    });\n\n    // Watcher, hogy új bejegyzéseknél frissítse a diagramot\n    watch(() => props.entries, (newEntries) => {\n      filteredEntries.value = newEntries; // Frissítjük a szűrt bejegyzéseket\n      createChart(); // Új diagram létrehozása\n    });\n\n    return {\n      chartRef,\n      filterByClient,\n      filterByProject,\n      resetFilter,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* További stílusok, ha szükséges */\n</style>\n"],"mappings":";;;AAYA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC3C,SAASC,KAAI,QAAS,UAAU;AAEhC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,QAAO,GAAIX,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMY,OAAM,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMa,eAAc,GAAIb,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC,EAAE;;IAE5C;IACA,MAAMQ,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMC,GAAE,GAAIJ,QAAQ,CAACK,KAAK,EAAEC,UAAU,CAAC,IAAI,CAAC,EAAE;MAC9C,IAAI,CAACF,GAAG,EAAE;QACRG,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;QACjD,OAAM,CAAE;MACV;;MAEA;MACA,IAAIP,OAAO,CAACI,KAAK,EAAE;QACjBJ,OAAO,CAACI,KAAK,CAACI,OAAO,CAAC,CAAC;MACzB;MAEAR,OAAO,CAACI,KAAI,GAAI,IAAIb,KAAK,CAACY,GAAG,EAAE;QAC7BR,IAAI,EAAE,KAAK;QACXc,IAAI,EAAE;UACJC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACX,eAAe,CAACG,KAAK,CAAC;UAC1CS,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,eAAe;YACtBL,IAAI,EAAEE,MAAM,CAACI,MAAM,CAACd,eAAe,CAACG,KAAK,CAAC,CAACY,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACC,MAAM,CAAC;YACjEC,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMC,cAAa,GAAKC,MAAM,IAAK;MACjCzB,eAAe,CAACG,KAAI,GAAIX,KAAK,CAACC,OAAO,CAACiC,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACF,MAAK,KAAMA,MAAM,CAAC;MAC9ExB,WAAW,CAAC,CAAC,EAAE;IACjB,CAAC;IAED,MAAM2B,eAAc,GAAKC,OAAO,IAAK;MACnC7B,eAAe,CAACG,KAAI,GAAIX,KAAK,CAACC,OAAO,CAACiC,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACE,OAAM,KAAMA,OAAO,CAAC;MAChF5B,WAAW,CAAC,CAAC,EAAE;IACjB,CAAC;IAED,MAAM6B,WAAU,GAAIA,CAAA,KAAM;MACxB9B,eAAe,CAACG,KAAI,GAAIX,KAAK,CAACC,OAAO,EAAE;MACvCQ,WAAW,CAAC,CAAC,EAAE;IACjB,CAAC;;IAED;IACAb,SAAS,CAAC,MAAM;MACda,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;;IAEF;IACAZ,KAAK,CAAC,MAAMG,KAAK,CAACC,OAAO,EAAGsC,UAAU,IAAK;MACzC/B,eAAe,CAACG,KAAI,GAAI4B,UAAU,EAAE;MACpC9B,WAAW,CAAC,CAAC,EAAE;IACjB,CAAC,CAAC;IAEF,OAAO;MACLH,QAAQ;MACR0B,cAAc;MACdI,eAAe;MACfE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}