{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TimeEntryForm from './components/TimeEntryForm.vue';\nexport default {\n  components: {\n    TimeEntryForm\n  },\n  data() {\n    return {\n      entries: JSON.parse(localStorage.getItem('entries')) || {}\n    };\n  },\n  methods: {\n    handleFormSubmit(newEntry) {\n      const {\n        userName\n      } = newEntry;\n      if (!this.entries[userName]) {\n        this.entries[userName] = [];\n      }\n\n      // Megkeressük, hogy létezik-e már a bejegyzés\n      const index = this.entries[userName].findIndex(entry => entry.date === newEntry.date && entry.startTime === newEntry.startTime);\n      if (index >= 0) {\n        // Módosítás\n        this.entries[userName][index] = newEntry;\n      } else {\n        // Új bejegyzés\n        this.entries[userName].push(newEntry);\n      }\n      this.saveEntries();\n      this.$refs.entryForm.resetForm(); // Űrlap resetelése\n    },\n    editEntry(userName, entry) {\n      this.$refs.entryForm.setFormData(entry); // Beállítjuk az űrlap adatokat\n      this.deleteEntry(userName, entry); // A kiválasztott bejegyzés törlése\n    },\n    deleteEntry(userName, index) {\n      this.entries[userName].splice(index, 1);\n      this.saveEntries();\n    },\n    saveEntries() {\n      localStorage.setItem('entries', JSON.stringify(this.entries));\n    }\n  }\n};","map":{"version":3,"names":["TimeEntryForm","components","data","entries","JSON","parse","localStorage","getItem","methods","handleFormSubmit","newEntry","userName","index","findIndex","entry","date","startTime","push","saveEntries","$refs","entryForm","resetForm","editEntry","setFormData","deleteEntry","splice","setItem","stringify"],"sources":["/Users/vasadidavid/Desktop/motibro/my-time-tracker/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto p-6\">\n    <h1 class=\"text-2xl font-bold mb-6\">Időnyilvántartó rendszer</h1>\n    <TimeEntryForm @submit=\"handleFormSubmit\" ref=\"entryForm\" />\n    <div class=\"mt-6\">\n      <h2 class=\"text-xl font-semibold\">Bejegyzések</h2>\n      <div v-if=\"Object.keys(entries).length === 0\" class=\"mt-4\">\n        <p>Nincsenek bejegyzések.</p>\n      </div>\n      <div v-for=\"(userEntries, userName) in entries\" :key=\"userName\" class=\"mb-4\">\n        <h3 class=\"font-semibold\">{{ userName }}</h3>\n        <div v-for=\"(entry, index) in userEntries\" :key=\"index\" class=\"border p-4 mt-2 rounded\">\n          <p><strong>Munkavállaló neve:</strong> {{ entry.userName }}</p> <!-- Munkavállaló neve -->\n          <p><strong>Dátum:</strong> {{ entry.date }}</p>\n          <p><strong>Kezdési idő:</strong> {{ entry.startTime }}</p>\n          <p><strong>Befejezési idő:</strong> {{ entry.endTime }}</p>\n          <p><strong>Feladat leírása:</strong> {{ entry.taskDescription }}</p>\n          <button @click=\"editEntry(userName, entry)\" class=\"mt-2 bg-yellow-500 text-white p-2 rounded\">Módosítás</button>\n          <button @click=\"deleteEntry(userName, index)\" class=\"mt-2 bg-red-500 text-white p-2 rounded\">Törlés</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TimeEntryForm from './components/TimeEntryForm.vue';\n\nexport default {\n  components: {\n    TimeEntryForm,\n  },\n  data() {\n    return {\n      entries: JSON.parse(localStorage.getItem('entries')) || {},\n    };\n  },\n  methods: {\n    handleFormSubmit(newEntry) {\n      const { userName } = newEntry;\n\n      if (!this.entries[userName]) {\n        this.entries[userName] = [];\n      }\n\n      // Megkeressük, hogy létezik-e már a bejegyzés\n      const index = this.entries[userName].findIndex(entry => entry.date === newEntry.date && entry.startTime === newEntry.startTime);\n\n      if (index >= 0) {\n        // Módosítás\n        this.entries[userName][index] = newEntry; \n      } else {\n        // Új bejegyzés\n        this.entries[userName].push(newEntry);\n      }\n\n      this.saveEntries();\n      this.$refs.entryForm.resetForm(); // Űrlap resetelése\n    },\n    editEntry(userName, entry) {\n      this.$refs.entryForm.setFormData(entry); // Beállítjuk az űrlap adatokat\n      this.deleteEntry(userName, entry); // A kiválasztott bejegyzés törlése\n    },\n    deleteEntry(userName, index) {\n      this.entries[userName].splice(index, 1);\n      this.saveEntries();\n    },\n    saveEntries() {\n      localStorage.setItem('entries', JSON.stringify(this.entries));\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Custom styles for your App.vue */\n</style>\n"],"mappings":";AA0BA,OAAOA,aAAY,MAAO,gCAAgC;AAE1D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IAC3D,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,QAAQ,EAAE;MACzB,MAAM;QAAEC;MAAS,IAAID,QAAQ;MAE7B,IAAI,CAAC,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACR,OAAO,CAACQ,QAAQ,IAAI,EAAE;MAC7B;;MAEA;MACA,MAAMC,KAAI,GAAI,IAAI,CAACT,OAAO,CAACQ,QAAQ,CAAC,CAACE,SAAS,CAACC,KAAI,IAAKA,KAAK,CAACC,IAAG,KAAML,QAAQ,CAACK,IAAG,IAAKD,KAAK,CAACE,SAAQ,KAAMN,QAAQ,CAACM,SAAS,CAAC;MAE/H,IAAIJ,KAAI,IAAK,CAAC,EAAE;QACd;QACA,IAAI,CAACT,OAAO,CAACQ,QAAQ,CAAC,CAACC,KAAK,IAAIF,QAAQ;MAC1C,OAAO;QACL;QACA,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAAC,CAACM,IAAI,CAACP,QAAQ,CAAC;MACvC;MAEA,IAAI,CAACQ,WAAW,CAAC,CAAC;MAClB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,EAAE;IACpC,CAAC;IACDC,SAASA,CAACX,QAAQ,EAAEG,KAAK,EAAE;MACzB,IAAI,CAACK,KAAK,CAACC,SAAS,CAACG,WAAW,CAACT,KAAK,CAAC,EAAE;MACzC,IAAI,CAACU,WAAW,CAACb,QAAQ,EAAEG,KAAK,CAAC,EAAE;IACrC,CAAC;IACDU,WAAWA,CAACb,QAAQ,EAAEC,KAAK,EAAE;MAC3B,IAAI,CAACT,OAAO,CAACQ,QAAQ,CAAC,CAACc,MAAM,CAACb,KAAK,EAAE,CAAC,CAAC;MACvC,IAAI,CAACM,WAAW,CAAC,CAAC;IACpB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZZ,YAAY,CAACoB,OAAO,CAAC,SAAS,EAAEtB,IAAI,CAACuB,SAAS,CAAC,IAAI,CAACxB,OAAO,CAAC,CAAC;IAC/D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}